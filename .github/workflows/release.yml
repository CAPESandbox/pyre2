name: Release

on:
  push:
    # release on tag push
    tags:
      - '*'

jobs:
  cibw_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-cibw.txt

      - name: Build wheels
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-*
          CIBW_ARCHS_LINUX: "auto64"
          CIBW_SKIP: "*musllinux*"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y -q --enablerepo=extras install epel-release
            && yum install -y re2-devel ninja-build
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel show {wheel} && auditwheel repair -w {dest_dir} {wheel}"
          CIBW_TEST_COMMAND: python -c "import re2"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          pip install pep517
          python -m pep517.build -s .

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  create_release:
    needs: [build_sdist, cibw_wheels]
    runs-on: ubuntu-latest

    steps:
      - name: Get version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo ${{ env.VERSION }}

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'

      # download all artifacts to project dir
      - uses: actions/download-artifact@v2

      - name: Generate changes file
        uses: sarnold/gitchangelog-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body_path: CHANGES.md
          draft: false
          prerelease: false
          # uncomment below to upload wheels to github releases
          files: dist/cibw-wheels/pyre2-updated*.whl

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.actor == github.repository_owner && startsWith(github.ref, 'refs/tags') }}
        with:
          password: ${{ secrets.pypi_password }}
          packages_dir: artifact/
